resource "aws_iam_policy" "GRACE_NetOps_Admins_Policy" {
  name        = "GRACE_NetOps_Admins_Policy"
  path        = "/"
  description = "GRACE_NetOps_Admins_Policy"

  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "ec2:CreateDhcpOptions",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:ReplaceRouteTableAssociation",
                "ec2:DescribeInstances",
                "cloudwatch:DeleteAlarms",
                "ec2:DeleteVpcEndpoints",
                "ec2:AttachInternetGateway",
                "ec2:DeleteRouteTable",
                "route53domains:*",
                "ec2:DeleteVpnGateway",
                "ec2:CreateRoute",
                "ec2:CreateInternetGateway",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:DeleteInternetGateway",
                "ec2:UnassignPrivateIpAddresses",
                "ec2:DescribeKeyPairs",
                "iam:GetRole",
                "sns:ListSubscriptionsByTopic",
                "ec2:DescribeVpcClassicLinkDnsSupport",
                "ec2:CreateTags",
                "ec2:ModifyNetworkInterfaceAttribute",
                "sns:CreateTopic",
                "cloudwatch:GetMetricStatistics",
                "ec2:AssignPrivateIpAddresses",
                "ec2:DisassociateRouteTable",
                "ec2:ReplaceNetworkAclAssociation",
                "ec2:CreateNetworkInterface",
                "ec2:RevokeSecurityGroupIngress",
                "ec2:DetachVpnGateway",
                "cloudwatch:DescribeAlarms",
                "elasticbeanstalk:List*",
                "ec2:DeleteDhcpOptions",
                "ec2:DeleteNatGateway",
                "ec2:CreateSubnet",
                "ec2:DescribeSubnets",
                "ec2:ModifyVpcEndpoint",
                "ec2:DeleteNetworkAclEntry",
                "ec2:CreateVpnConnection",
                "ec2:DisassociateAddress",
                "ec2:DescribeMovingAddresses",
                "ec2:MoveAddressToVpc",
                "ec2:CreateNatGateway",
                "ec2:DescribeFlowLogs",
                "ec2:CreateVpc",
                "sns:ListTopics",
                "s3:ListBucket",
                "ec2:DescribeVpcEndpointServices",
                "ec2:DescribeVpcAttribute",
                "ec2:ModifySubnetAttribute",
                "iam:PassRole",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeNetworkInterfaceAttribute",
                "ec2:DeleteNetworkAcl",
                "ec2:ReleaseAddress",
                "ec2:AssociateDhcpOptions",
                "ec2:AttachVpnGateway",
                "iam:ListRoles",
                "ec2:DescribeClassicLinkInstances",
                "ec2:CreateVpnConnectionRoute",
                "ec2:DescribeSecurityGroups",
                "ec2:RestoreAddressToClassic",
                "ec2:DeleteCustomerGateway",
                "ec2:DescribeVpcs",
                "ec2:EnableVgwRoutePropagation",
                "ec2:DisableVpcClassicLink",
                "ec2:DeleteFlowLogs",
                "ec2:DeleteSubnet",
                "ec2:DetachClassicLinkVpc",
                "ec2:DeleteVpcPeeringConnection",
                "ec2:AcceptVpcPeeringConnection",
                "ec2:DisableVgwRoutePropagation",
                "ec2:DescribePlacementGroups",
                "ec2:GetConsoleScreenshot",
                "ec2:ReplaceRoute",
                "ec2:AssociateRouteTable",
                "ec2:RejectVpcPeeringConnection",
                "ec2:DescribeInternetGateways",
                "ec2:DeleteVolume",
                "ec2:CreatePlacementGroup",
                "ec2:ReplaceNetworkAclEntry",
                "ec2:CreateVpnGateway",
                "ec2:DeleteVpnConnection",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeRouteTables",
                "ec2:CreateVpcPeeringConnection",
                "ec2:EnableVpcClassicLink",
                "directconnect:*",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:ResetNetworkInterfaceAttribute",
                "ec2:CreateRouteTable",
                "ec2:DeleteNetworkInterface",
                "elasticbeanstalk:Describe*",
                "ec2:DetachInternetGateway",
                "ec2:CreateCustomerGateway",
                "ec2:DescribePrefixLists",
                "ec2:DescribeVpcClassicLink",
                "ec2:CreateFlowLogs",
                "ec2:DescribeVpcEndpoints",
                "ec2:DeleteVpc",
                "ec2:AssociateAddress",
                "ec2:DescribeVpnGateways",
                "ec2:DescribeAddresses",
                "ec2:DeleteTags",
                "ec2:DescribeDhcpOptions",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "ec2:DescribeNetworkInterfaces",
                "ec2:CreateSecurityGroup",
                "ec2:CreateNetworkAcl",
                "ec2:ModifyVpcAttribute",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AttachClassicLinkVpc",
                "ec2:DetachNetworkInterface",
                "ec2:DeletePlacementGroup",
                "ec2:DescribeTags",
                "ec2:DeleteRoute",
                "ec2:DescribeNatGateways",
                "ec2:DescribeCustomerGateways",
                "ec2:AllocateAddress",
                "cloudwatch:PutMetricAlarm",
                "ec2:DeleteVpnConnectionRoute",
                "ec2:CreateVpcEndpoint",
                "ec2:DeleteSecurityGroup",
                "route53:*",
                "cloudfront:ListDistributions",
                "ec2:AttachNetworkInterface",
                "s3:GetBucketLocation",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "ec2:CreateNetworkAclEntry"
            ],
            "Resource": "*"
        }
    ]
}
EOF
}

resource "aws_iam_policy" "GRACE_NetOps_View_Only_Policy" {
  name        = "GRACE_NetOps_View_Only_Policy"
  path        = "/"
  description = "GRACE_NetOps_View_Only_Policy"

  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "ec2:DescribeInstances",
                "route53:ListTrafficPolicyVersions",
                "route53:TestDNSAnswer",
                "route53:GetHealthCheck",
                "route53domains:ViewBilling",
                "ec2:GetConsoleScreenshot",
                "ec2:DescribePlacementGroups",
                "sns:CheckIfPhoneNumberIsOptedOut",
                "ec2:DescribeInternetGateways",
                "cloudfront:GetDistribution",
                "route53domains:CheckDomainAvailability",
                "cloudfront:GetStreamingDistribution",
                "cloudfront:GetDistributionConfig",
                "ec2:DescribeKeyPairs",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeRouteTables",
                "directconnect:ConfirmPublicVirtualInterface",
                "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
                "iam:GetRole",
                "sns:ListSubscriptionsByTopic",
                "ec2:DescribeVpcClassicLinkDnsSupport",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpcPeeringConnections",
                "route53:ListTrafficPolicyInstancesByHostedZone",
                "route53:ListVPCAssociationAuthorizations",
                "route53:GetReusableDelegationSetLimit",
                "route53domains:GetDomainSuggestions",
                "sns:GetPlatformApplicationAttributes",
                "elasticbeanstalk:Describe*",
                "sns:GetSubscriptionAttributes",
                "ec2:DescribePrefixLists",
                "route53domains:GetOperationDetail",
                "ec2:DescribeVpcClassicLink",
                "directconnect:ConfirmPrivateVirtualInterface",
                "route53:ListTagsForResources",
                "route53:GetAccountLimit",
                "sns:ListPhoneNumbersOptedOut",
                "sns:GetEndpointAttributes",
                "cloudfront:ListTagsForResource",
                "elasticbeanstalk:List*",
                "ec2:DescribeVpcEndpoints",
                "route53:GetHostedZoneLimit",
                "ec2:DescribeSubnets",
                "route53:GetTrafficPolicy",
                "ec2:DescribeVpnGateways",
                "sns:GetSMSAttributes",
                "ec2:DescribeMovingAddresses",
                "route53:ListTrafficPolicyInstances",
                "ec2:DescribeAddresses",
                "route53:GetTrafficPolicyInstanceCount",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeDhcpOptions",
                "sns:ListTopics",
                "ec2:DescribeVpcEndpointServices",
                "s3:ListBucket",
                "route53domains:GetDomainDetail",
                "ec2:DescribeVpcAttribute",
                "iam:PassRole",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeNetworkInterfaceAttribute",
                "route53:ListTrafficPolicies",
                "cloudfront:GetCloudFrontOriginAccessIdentity",
                "route53:GetTrafficPolicyInstance",
                "directconnect:ConfirmConnection",
                "route53:GetQueryLoggingConfig",
                "cloudfront:GetStreamingDistributionConfig",
                "sns:GetTopicAttributes",
                "ec2:DescribeTags",
                "cloudfront:GetInvalidation",
                "iam:ListRoles",
                "route53domains:GetContactReachabilityStatus",
                "ec2:DescribeClassicLinkInstances",
                "ec2:DescribeNatGateways",
                "ec2:DescribeCustomerGateways",
                "route53:ListTagsForResource",
                "ec2:DescribeSecurityGroups",
                "route53:ListTrafficPolicyInstancesByPolicy",
                "ec2:DescribeVpcs",
                "cloudfront:ListDistributions",
                "elasticbeanstalk:RetrieveEnvironmentInfo"
            ],
            "Resource": "*"
        }
    ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "GRACE_NetOps_admins_policy_attachment" {
  role       = "${aws_iam_role.netops_admin_role.name}"
  policy_arn = "${aws_iam_policy.GRACE_NetOps_Admins_Policy.arn}"
}

resource "aws_iam_role_policy_attachment" "GRACE_NetOps_view_only_policy_attachment" {
  role       = "${aws_iam_role.netops_view_only_role.name}"
  policy_arn = "${aws_iam_policy.GRACE_NetOps_View_Only_Policy.arn}"
}
